name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm

      - run: pnpm install

      - uses: changesets/action@v1
        id: changesets
        with:
          publish: pnpm run release
          version: pnpm run version
          title: "chore: version packages"
          commit: "chore: version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Format Published Packages
        id: package_list
        if: steps.changesets.outputs.published == 'true'
        run: |
          # 使用 jq 解析 JSON，并格式化成 " - 包名@版本号" 的格式
          # jq 的 -r 参数表示输出原始字符串，而不是带引号的 JSON 字符串
          # .[] 表示遍历数组中的每个元素
          # " - \(.name)@\(.version)" 是格式化字符串
          # 最后通过 GITHUB_OUTPUT 将这个多行字符串设置为一个名为 "packages" 的输出
          echo "packages=$(echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[] | " - \(.name)@\(.version)"')" >> $GITHUB_OUTPUT

      - name: Notify on Release
        if: steps.changesets.outputs.published == 'true'
        uses: cbrgm/telegram-github-action@v1
        with:
          token: ${{ secrets.TELEGRAM_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            🚀 新版本发布

            ${{ steps.package_list.outputs.packages }}

            更新详情请查看 ${GITHUB_REPOSITORY}